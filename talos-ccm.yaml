apiVersion: talos.dev/v1alpha1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: talos-cloud-controller-manager
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: talos-cloud-controller-manager
    app.kubernetes.io/version: v1.10.1
    helm.sh/chart: talos-cloud-controller-manager-0.4.7
  name: talos-cloud-controller-manager-talos-secrets
  namespace: kube-system
spec:
  roles:
  - os:reader
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: talos-cloud-controller-manager
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: talos-cloud-controller-manager
    app.kubernetes.io/version: v1.10.1
    helm.sh/chart: talos-cloud-controller-manager-0.4.7
  name: talos-cloud-controller-manager
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: talos-cloud-controller-manager
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: talos-cloud-controller-manager
    app.kubernetes.io/version: v1.10.1
    helm.sh/chart: talos-cloud-controller-manager-0.4.7
  name: system:talos-cloud-controller-manager
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - create
  - update
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - create
  - get
- apiGroups:
  - ""
  resources:
  - serviceaccounts/token
  verbs:
  - create
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - list
  - watch
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests/approval
  verbs:
  - update
- apiGroups:
  - certificates.k8s.io
  resourceNames:
  - kubernetes.io/kubelet-serving
  resources:
  - signers
  verbs:
  - approve
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: system:talos-cloud-controller-manager:extension-apiserver-authentication-reader
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: extension-apiserver-authentication-reader
subjects:
- kind: ServiceAccount
  name: talos-cloud-controller-manager
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: system:talos-cloud-controller-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:talos-cloud-controller-manager
subjects:
- kind: ServiceAccount
  name: talos-cloud-controller-manager
  namespace: kube-system
---
apiVersion: v1
data:
  ccm-config.yaml: |
    global:
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: talos-cloud-controller-manager
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: talos-cloud-controller-manager
    app.kubernetes.io/version: v1.10.1
    helm.sh/chart: talos-cloud-controller-manager-0.4.7
  name: talos-cloud-controller-manager
  namespace: kube-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: talos-cloud-controller-manager
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: talos-cloud-controller-manager
    app.kubernetes.io/version: v1.10.1
    helm.sh/chart: talos-cloud-controller-manager-0.4.7
  name: talos-cloud-controller-manager
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: metrics
    port: 50258
    protocol: TCP
    targetPort: 50258
  selector:
    app.kubernetes.io/instance: talos-cloud-controller-manager
    app.kubernetes.io/name: talos-cloud-controller-manager
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: talos-cloud-controller-manager
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: talos-cloud-controller-manager
    app.kubernetes.io/version: v1.10.1
    helm.sh/chart: talos-cloud-controller-manager-0.4.7
  name: talos-cloud-controller-manager
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: talos-cloud-controller-manager
      app.kubernetes.io/name: talos-cloud-controller-manager
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: talos-cloud-controller-manager
        app.kubernetes.io/name: talos-cloud-controller-manager
    spec:
      containers:
      - args:
        - --v=2
        - --cloud-provider=talos
        - --cloud-config=/etc/talos/ccm-config.yaml
        - --controllers=node-csr-approval
        - --leader-elect-resource-name=cloud-controller-manager-talos
        - --use-service-account-credentials
        - --secure-port=50258
        - --authorization-always-allow-paths=/healthz,/livez,/readyz,/metrics
        command:
        - /talos-cloud-controller-manager
        image: ghcr.io/siderolabs/talos-cloud-controller-manager:v1.10.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: metrics
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 30
          timeoutSeconds: 5
        name: talos-cloud-controller-manager
        ports:
        - containerPort: 50258
          name: metrics
          protocol: TCP
        resources:
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /etc/talos
          name: cloud-config
          readOnly: true
        - mountPath: /var/run/secrets/talos.dev
          name: talos-secrets
          readOnly: true
      nodeSelector:
        node-role.kubernetes.io/control-plane: ""
      priorityClassName: system-cluster-critical
      securityContext:
        fsGroup: 10258
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: 10258
        runAsNonRoot: true
        runAsUser: 10258
      serviceAccountName: talos-cloud-controller-manager
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        operator: Exists
      - effect: NoSchedule
        key: node.cloudprovider.kubernetes.io/uninitialized
        operator: Exists
      - effect: NoSchedule
        key: node.kubernetes.io/not-ready
        operator: Exists
      volumes:
      - configMap:
          defaultMode: 416
          name: talos-cloud-controller-manager
        name: cloud-config
      - name: talos-secrets
        secret:
          defaultMode: 416
          secretName: talos-cloud-controller-manager-talos-secrets
